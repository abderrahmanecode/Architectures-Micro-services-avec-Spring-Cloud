{"ast":null,"code":"import { KeycloakEventType } from \"keycloak-angular\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"keycloak-angular\";\nexport class SecurityService {\n  constructor(kcService) {\n    this.kcService = kcService;\n    this.init();\n  }\n  init() {\n    this.kcService.keycloakEvents$.subscribe({\n      next: e => {\n        if (e.type == KeycloakEventType.OnAuthSuccess) {\n          this.kcService.loadUserProfile().then(profile => {\n            this.profile = profile;\n          });\n        }\n      }\n    });\n  }\n  hasRoleIn(roles) {\n    let userRoles = this.kcService.getUserRoles();\n    for (let role of roles) {\n      if (userRoles.includes(role)) return true;\n    }\n    return false;\n  }\n  static #_ = this.ɵfac = function SecurityService_Factory(t) {\n    return new (t || SecurityService)(i0.ɵɵinject(i1.KeycloakService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SecurityService,\n    factory: SecurityService.ɵfac,\n    providedIn: \"root\"\n  });\n}","map":{"version":3,"mappings":"AAEA,SAAQA,iBAAiB,QAAwB,kBAAkB;;;AAGnE,OAAM,MAAOC,eAAe;EAE1BC,YAAoBC,SAA0B;IAA1B,cAAS,GAATA,SAAS;IAC3B,IAAI,CAACC,IAAI,EAAE;EACb;EACAA,IAAI;IACF,IAAI,CAACD,SAAS,CAACE,eAAe,CAACC,SAAS,CAAC;MACvCC,IAAI,EAAGC,CAAC,IAAI;QACV,IAAIA,CAAC,CAACC,IAAI,IAAIT,iBAAiB,CAACU,aAAa,EAAE;UAC7C,IAAI,CAACP,SAAS,CAACQ,eAAe,EAAE,CAACC,IAAI,CAACC,OAAO,IAAE;YAC7C,IAAI,CAACA,OAAO,GAACA,OAAO;UACtB,CAAC,CAAC;;MAEN;KACD,CAAC;EACJ;EACOC,SAAS,CAACC,KAAc;IAC7B,IAAIC,SAAS,GAAG,IAAI,CAACb,SAAS,CAACc,YAAY,EAAE;IAC7C,KAAI,IAAIC,IAAI,IAAIH,KAAK,EAAC;MACpB,IAAIC,SAAS,CAACG,QAAQ,CAACD,IAAI,CAAC,EAAE,OAAO,IAAI;;IACzC,OAAO,KAAK;EAChB;EAAC;qBArBUjB,eAAe;EAAA;EAAA;WAAfA,eAAe;IAAAmB,SAAfnB,eAAe;IAAAoB,YADF;EAAM","names":["KeycloakEventType","SecurityService","constructor","kcService","init","keycloakEvents$","subscribe","next","e","type","OnAuthSuccess","loadUserProfile","then","profile","hasRoleIn","roles","userRoles","getUserRoles","role","includes","factory","providedIn"],"sourceRoot":"","sources":["D:\\Abdo files\\TP3_MS\\ecom-web-app\\src\\app\\services\\security.service.ts"],"sourcesContent":["import {Injectable} from \"@angular/core\";\r\nimport {KeycloakProfile} from \"keycloak-js\";\r\nimport {KeycloakEventType, KeycloakService} from \"keycloak-angular\";\r\n\r\n@Injectable({providedIn : \"root\"})\r\nexport class SecurityService {\r\n  public profile? : KeycloakProfile;\r\n  constructor (public kcService: KeycloakService) {\r\n    this.init();\r\n  }\r\n  init(){\r\n    this.kcService.keycloakEvents$.subscribe({\r\n      next: (e) => {\r\n        if (e.type == KeycloakEventType.OnAuthSuccess) {\r\n          this.kcService.loadUserProfile().then(profile=>{\r\n            this.profile=profile;\r\n          });\r\n        }\r\n      }\r\n    });\r\n  }\r\n  public hasRoleIn(roles:string[]):boolean{\r\n    let userRoles = this.kcService.getUserRoles();\r\n    for(let role of roles){\r\n      if (userRoles.includes(role)) return true;\r\n    } return false;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}