{"ast":null,"code":"/**\n * [js-sha256]{@link https://github.com/emn178/js-sha256}\n *\n * @version 0.9.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2014-2017\n * @license MIT\n */\n/*jslint bitwise: true */\n(function () {\n  'use strict';\n\n  var ERROR = 'input is invalid type';\n  var WINDOW = typeof window === 'object';\n  var root = WINDOW ? window : {};\n  if (root.JS_SHA256_NO_WINDOW) {\n    WINDOW = false;\n  }\n  var WEB_WORKER = !WINDOW && typeof self === 'object';\n  var NODE_JS = !root.JS_SHA256_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n  if (NODE_JS) {\n    root = global;\n  } else if (WEB_WORKER) {\n    root = self;\n  }\n  var COMMON_JS = !root.JS_SHA256_NO_COMMON_JS && typeof module === 'object' && module.exports;\n  var AMD = typeof define === 'function' && define.amd;\n  var ARRAY_BUFFER = !root.JS_SHA256_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\n  var HEX_CHARS = '0123456789abcdef'.split('');\n  var EXTRA = [-2147483648, 8388608, 32768, 128];\n  var SHIFT = [24, 16, 8, 0];\n  var K = [0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\n  var OUTPUT_TYPES = ['hex', 'array', 'digest', 'arrayBuffer'];\n  var blocks = [];\n  if (root.JS_SHA256_NO_NODE_JS || !Array.isArray) {\n    Array.isArray = function (obj) {\n      return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n  }\n  if (ARRAY_BUFFER && (root.JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\n    ArrayBuffer.isView = function (obj) {\n      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n    };\n  }\n  var createOutputMethod = function (outputType, is224) {\n    return function (message) {\n      return new Sha256(is224, true).update(message)[outputType]();\n    };\n  };\n  var createMethod = function (is224) {\n    var method = createOutputMethod('hex', is224);\n    if (NODE_JS) {\n      method = nodeWrap(method, is224);\n    }\n    method.create = function () {\n      return new Sha256(is224);\n    };\n    method.update = function (message) {\n      return method.create().update(message);\n    };\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createOutputMethod(type, is224);\n    }\n    return method;\n  };\n  var nodeWrap = function (method, is224) {\n    var crypto = eval(\"require('crypto')\");\n    var Buffer = eval(\"require('buffer').Buffer\");\n    var algorithm = is224 ? 'sha224' : 'sha256';\n    var nodeMethod = function (message) {\n      if (typeof message === 'string') {\n        return crypto.createHash(algorithm).update(message, 'utf8').digest('hex');\n      } else {\n        if (message === null || message === undefined) {\n          throw new Error(ERROR);\n        } else if (message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        }\n      }\n      if (Array.isArray(message) || ArrayBuffer.isView(message) || message.constructor === Buffer) {\n        return crypto.createHash(algorithm).update(new Buffer(message)).digest('hex');\n      } else {\n        return method(message);\n      }\n    };\n    return nodeMethod;\n  };\n  var createHmacOutputMethod = function (outputType, is224) {\n    return function (key, message) {\n      return new HmacSha256(key, is224, true).update(message)[outputType]();\n    };\n  };\n  var createHmacMethod = function (is224) {\n    var method = createHmacOutputMethod('hex', is224);\n    method.create = function (key) {\n      return new HmacSha256(key, is224);\n    };\n    method.update = function (key, message) {\n      return method.create(key).update(message);\n    };\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createHmacOutputMethod(type, is224);\n    }\n    return method;\n  };\n  function Sha256(is224, sharedMemory) {\n    if (sharedMemory) {\n      blocks[0] = blocks[16] = blocks[1] = blocks[2] = blocks[3] = blocks[4] = blocks[5] = blocks[6] = blocks[7] = blocks[8] = blocks[9] = blocks[10] = blocks[11] = blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      this.blocks = blocks;\n    } else {\n      this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    }\n    if (is224) {\n      this.h0 = 0xc1059ed8;\n      this.h1 = 0x367cd507;\n      this.h2 = 0x3070dd17;\n      this.h3 = 0xf70e5939;\n      this.h4 = 0xffc00b31;\n      this.h5 = 0x68581511;\n      this.h6 = 0x64f98fa7;\n      this.h7 = 0xbefa4fa4;\n    } else {\n      // 256\n      this.h0 = 0x6a09e667;\n      this.h1 = 0xbb67ae85;\n      this.h2 = 0x3c6ef372;\n      this.h3 = 0xa54ff53a;\n      this.h4 = 0x510e527f;\n      this.h5 = 0x9b05688c;\n      this.h6 = 0x1f83d9ab;\n      this.h7 = 0x5be0cd19;\n    }\n    this.block = this.start = this.bytes = this.hBytes = 0;\n    this.finalized = this.hashed = false;\n    this.first = true;\n    this.is224 = is224;\n  }\n  Sha256.prototype.update = function (message) {\n    if (this.finalized) {\n      return;\n    }\n    var notString,\n      type = typeof message;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (message === null) {\n          throw new Error(ERROR);\n        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        } else if (!Array.isArray(message)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\n            throw new Error(ERROR);\n          }\n        }\n      } else {\n        throw new Error(ERROR);\n      }\n      notString = true;\n    }\n    var code,\n      index = 0,\n      i,\n      length = message.length,\n      blocks = this.blocks;\n    while (index < length) {\n      if (this.hashed) {\n        this.hashed = false;\n        blocks[0] = this.block;\n        blocks[16] = blocks[1] = blocks[2] = blocks[3] = blocks[4] = blocks[5] = blocks[6] = blocks[7] = blocks[8] = blocks[9] = blocks[10] = blocks[11] = blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      }\n      if (notString) {\n        for (i = this.start; index < length && i < 64; ++index) {\n          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n        }\n      } else {\n        for (i = this.start; index < length && i < 64; ++index) {\n          code = message.charCodeAt(index);\n          if (code < 0x80) {\n            blocks[i >> 2] |= code << SHIFT[i++ & 3];\n          } else if (code < 0x800) {\n            blocks[i >> 2] |= (0xc0 | code >> 6) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];\n          } else if (code < 0xd800 || code >= 0xe000) {\n            blocks[i >> 2] |= (0xe0 | code >> 12) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | code >> 6 & 0x3f) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];\n          } else {\n            code = 0x10000 + ((code & 0x3ff) << 10 | message.charCodeAt(++index) & 0x3ff);\n            blocks[i >> 2] |= (0xf0 | code >> 18) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | code >> 12 & 0x3f) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | code >> 6 & 0x3f) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];\n          }\n        }\n      }\n      this.lastByteIndex = i;\n      this.bytes += i - this.start;\n      if (i >= 64) {\n        this.block = blocks[16];\n        this.start = i - 64;\n        this.hash();\n        this.hashed = true;\n      } else {\n        this.start = i;\n      }\n    }\n    if (this.bytes > 4294967295) {\n      this.hBytes += this.bytes / 4294967296 << 0;\n      this.bytes = this.bytes % 4294967296;\n    }\n    return this;\n  };\n  Sha256.prototype.finalize = function () {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks,\n      i = this.lastByteIndex;\n    blocks[16] = this.block;\n    blocks[i >> 2] |= EXTRA[i & 3];\n    this.block = blocks[16];\n    if (i >= 56) {\n      if (!this.hashed) {\n        this.hash();\n      }\n      blocks[0] = this.block;\n      blocks[16] = blocks[1] = blocks[2] = blocks[3] = blocks[4] = blocks[5] = blocks[6] = blocks[7] = blocks[8] = blocks[9] = blocks[10] = blocks[11] = blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n    }\n    blocks[14] = this.hBytes << 3 | this.bytes >>> 29;\n    blocks[15] = this.bytes << 3;\n    this.hash();\n  };\n  Sha256.prototype.hash = function () {\n    var a = this.h0,\n      b = this.h1,\n      c = this.h2,\n      d = this.h3,\n      e = this.h4,\n      f = this.h5,\n      g = this.h6,\n      h = this.h7,\n      blocks = this.blocks,\n      j,\n      s0,\n      s1,\n      maj,\n      t1,\n      t2,\n      ch,\n      ab,\n      da,\n      cd,\n      bc;\n    for (j = 16; j < 64; ++j) {\n      // rightrotate\n      t1 = blocks[j - 15];\n      s0 = (t1 >>> 7 | t1 << 25) ^ (t1 >>> 18 | t1 << 14) ^ t1 >>> 3;\n      t1 = blocks[j - 2];\n      s1 = (t1 >>> 17 | t1 << 15) ^ (t1 >>> 19 | t1 << 13) ^ t1 >>> 10;\n      blocks[j] = blocks[j - 16] + s0 + blocks[j - 7] + s1 << 0;\n    }\n    bc = b & c;\n    for (j = 0; j < 64; j += 4) {\n      if (this.first) {\n        if (this.is224) {\n          ab = 300032;\n          t1 = blocks[0] - 1413257819;\n          h = t1 - 150054599 << 0;\n          d = t1 + 24177077 << 0;\n        } else {\n          ab = 704751109;\n          t1 = blocks[0] - 210244248;\n          h = t1 - 1521486534 << 0;\n          d = t1 + 143694565 << 0;\n        }\n        this.first = false;\n      } else {\n        s0 = (a >>> 2 | a << 30) ^ (a >>> 13 | a << 19) ^ (a >>> 22 | a << 10);\n        s1 = (e >>> 6 | e << 26) ^ (e >>> 11 | e << 21) ^ (e >>> 25 | e << 7);\n        ab = a & b;\n        maj = ab ^ a & c ^ bc;\n        ch = e & f ^ ~e & g;\n        t1 = h + s1 + ch + K[j] + blocks[j];\n        t2 = s0 + maj;\n        h = d + t1 << 0;\n        d = t1 + t2 << 0;\n      }\n      s0 = (d >>> 2 | d << 30) ^ (d >>> 13 | d << 19) ^ (d >>> 22 | d << 10);\n      s1 = (h >>> 6 | h << 26) ^ (h >>> 11 | h << 21) ^ (h >>> 25 | h << 7);\n      da = d & a;\n      maj = da ^ d & b ^ ab;\n      ch = h & e ^ ~h & f;\n      t1 = g + s1 + ch + K[j + 1] + blocks[j + 1];\n      t2 = s0 + maj;\n      g = c + t1 << 0;\n      c = t1 + t2 << 0;\n      s0 = (c >>> 2 | c << 30) ^ (c >>> 13 | c << 19) ^ (c >>> 22 | c << 10);\n      s1 = (g >>> 6 | g << 26) ^ (g >>> 11 | g << 21) ^ (g >>> 25 | g << 7);\n      cd = c & d;\n      maj = cd ^ c & a ^ da;\n      ch = g & h ^ ~g & e;\n      t1 = f + s1 + ch + K[j + 2] + blocks[j + 2];\n      t2 = s0 + maj;\n      f = b + t1 << 0;\n      b = t1 + t2 << 0;\n      s0 = (b >>> 2 | b << 30) ^ (b >>> 13 | b << 19) ^ (b >>> 22 | b << 10);\n      s1 = (f >>> 6 | f << 26) ^ (f >>> 11 | f << 21) ^ (f >>> 25 | f << 7);\n      bc = b & c;\n      maj = bc ^ b & d ^ cd;\n      ch = f & g ^ ~f & h;\n      t1 = e + s1 + ch + K[j + 3] + blocks[j + 3];\n      t2 = s0 + maj;\n      e = a + t1 << 0;\n      a = t1 + t2 << 0;\n    }\n    this.h0 = this.h0 + a << 0;\n    this.h1 = this.h1 + b << 0;\n    this.h2 = this.h2 + c << 0;\n    this.h3 = this.h3 + d << 0;\n    this.h4 = this.h4 + e << 0;\n    this.h5 = this.h5 + f << 0;\n    this.h6 = this.h6 + g << 0;\n    this.h7 = this.h7 + h << 0;\n  };\n  Sha256.prototype.hex = function () {\n    this.finalize();\n    var h0 = this.h0,\n      h1 = this.h1,\n      h2 = this.h2,\n      h3 = this.h3,\n      h4 = this.h4,\n      h5 = this.h5,\n      h6 = this.h6,\n      h7 = this.h7;\n    var hex = HEX_CHARS[h0 >> 28 & 0x0F] + HEX_CHARS[h0 >> 24 & 0x0F] + HEX_CHARS[h0 >> 20 & 0x0F] + HEX_CHARS[h0 >> 16 & 0x0F] + HEX_CHARS[h0 >> 12 & 0x0F] + HEX_CHARS[h0 >> 8 & 0x0F] + HEX_CHARS[h0 >> 4 & 0x0F] + HEX_CHARS[h0 & 0x0F] + HEX_CHARS[h1 >> 28 & 0x0F] + HEX_CHARS[h1 >> 24 & 0x0F] + HEX_CHARS[h1 >> 20 & 0x0F] + HEX_CHARS[h1 >> 16 & 0x0F] + HEX_CHARS[h1 >> 12 & 0x0F] + HEX_CHARS[h1 >> 8 & 0x0F] + HEX_CHARS[h1 >> 4 & 0x0F] + HEX_CHARS[h1 & 0x0F] + HEX_CHARS[h2 >> 28 & 0x0F] + HEX_CHARS[h2 >> 24 & 0x0F] + HEX_CHARS[h2 >> 20 & 0x0F] + HEX_CHARS[h2 >> 16 & 0x0F] + HEX_CHARS[h2 >> 12 & 0x0F] + HEX_CHARS[h2 >> 8 & 0x0F] + HEX_CHARS[h2 >> 4 & 0x0F] + HEX_CHARS[h2 & 0x0F] + HEX_CHARS[h3 >> 28 & 0x0F] + HEX_CHARS[h3 >> 24 & 0x0F] + HEX_CHARS[h3 >> 20 & 0x0F] + HEX_CHARS[h3 >> 16 & 0x0F] + HEX_CHARS[h3 >> 12 & 0x0F] + HEX_CHARS[h3 >> 8 & 0x0F] + HEX_CHARS[h3 >> 4 & 0x0F] + HEX_CHARS[h3 & 0x0F] + HEX_CHARS[h4 >> 28 & 0x0F] + HEX_CHARS[h4 >> 24 & 0x0F] + HEX_CHARS[h4 >> 20 & 0x0F] + HEX_CHARS[h4 >> 16 & 0x0F] + HEX_CHARS[h4 >> 12 & 0x0F] + HEX_CHARS[h4 >> 8 & 0x0F] + HEX_CHARS[h4 >> 4 & 0x0F] + HEX_CHARS[h4 & 0x0F] + HEX_CHARS[h5 >> 28 & 0x0F] + HEX_CHARS[h5 >> 24 & 0x0F] + HEX_CHARS[h5 >> 20 & 0x0F] + HEX_CHARS[h5 >> 16 & 0x0F] + HEX_CHARS[h5 >> 12 & 0x0F] + HEX_CHARS[h5 >> 8 & 0x0F] + HEX_CHARS[h5 >> 4 & 0x0F] + HEX_CHARS[h5 & 0x0F] + HEX_CHARS[h6 >> 28 & 0x0F] + HEX_CHARS[h6 >> 24 & 0x0F] + HEX_CHARS[h6 >> 20 & 0x0F] + HEX_CHARS[h6 >> 16 & 0x0F] + HEX_CHARS[h6 >> 12 & 0x0F] + HEX_CHARS[h6 >> 8 & 0x0F] + HEX_CHARS[h6 >> 4 & 0x0F] + HEX_CHARS[h6 & 0x0F];\n    if (!this.is224) {\n      hex += HEX_CHARS[h7 >> 28 & 0x0F] + HEX_CHARS[h7 >> 24 & 0x0F] + HEX_CHARS[h7 >> 20 & 0x0F] + HEX_CHARS[h7 >> 16 & 0x0F] + HEX_CHARS[h7 >> 12 & 0x0F] + HEX_CHARS[h7 >> 8 & 0x0F] + HEX_CHARS[h7 >> 4 & 0x0F] + HEX_CHARS[h7 & 0x0F];\n    }\n    return hex;\n  };\n  Sha256.prototype.toString = Sha256.prototype.hex;\n  Sha256.prototype.digest = function () {\n    this.finalize();\n    var h0 = this.h0,\n      h1 = this.h1,\n      h2 = this.h2,\n      h3 = this.h3,\n      h4 = this.h4,\n      h5 = this.h5,\n      h6 = this.h6,\n      h7 = this.h7;\n    var arr = [h0 >> 24 & 0xFF, h0 >> 16 & 0xFF, h0 >> 8 & 0xFF, h0 & 0xFF, h1 >> 24 & 0xFF, h1 >> 16 & 0xFF, h1 >> 8 & 0xFF, h1 & 0xFF, h2 >> 24 & 0xFF, h2 >> 16 & 0xFF, h2 >> 8 & 0xFF, h2 & 0xFF, h3 >> 24 & 0xFF, h3 >> 16 & 0xFF, h3 >> 8 & 0xFF, h3 & 0xFF, h4 >> 24 & 0xFF, h4 >> 16 & 0xFF, h4 >> 8 & 0xFF, h4 & 0xFF, h5 >> 24 & 0xFF, h5 >> 16 & 0xFF, h5 >> 8 & 0xFF, h5 & 0xFF, h6 >> 24 & 0xFF, h6 >> 16 & 0xFF, h6 >> 8 & 0xFF, h6 & 0xFF];\n    if (!this.is224) {\n      arr.push(h7 >> 24 & 0xFF, h7 >> 16 & 0xFF, h7 >> 8 & 0xFF, h7 & 0xFF);\n    }\n    return arr;\n  };\n  Sha256.prototype.array = Sha256.prototype.digest;\n  Sha256.prototype.arrayBuffer = function () {\n    this.finalize();\n    var buffer = new ArrayBuffer(this.is224 ? 28 : 32);\n    var dataView = new DataView(buffer);\n    dataView.setUint32(0, this.h0);\n    dataView.setUint32(4, this.h1);\n    dataView.setUint32(8, this.h2);\n    dataView.setUint32(12, this.h3);\n    dataView.setUint32(16, this.h4);\n    dataView.setUint32(20, this.h5);\n    dataView.setUint32(24, this.h6);\n    if (!this.is224) {\n      dataView.setUint32(28, this.h7);\n    }\n    return buffer;\n  };\n  function HmacSha256(key, is224, sharedMemory) {\n    var i,\n      type = typeof key;\n    if (type === 'string') {\n      var bytes = [],\n        length = key.length,\n        index = 0,\n        code;\n      for (i = 0; i < length; ++i) {\n        code = key.charCodeAt(i);\n        if (code < 0x80) {\n          bytes[index++] = code;\n        } else if (code < 0x800) {\n          bytes[index++] = 0xc0 | code >> 6;\n          bytes[index++] = 0x80 | code & 0x3f;\n        } else if (code < 0xd800 || code >= 0xe000) {\n          bytes[index++] = 0xe0 | code >> 12;\n          bytes[index++] = 0x80 | code >> 6 & 0x3f;\n          bytes[index++] = 0x80 | code & 0x3f;\n        } else {\n          code = 0x10000 + ((code & 0x3ff) << 10 | key.charCodeAt(++i) & 0x3ff);\n          bytes[index++] = 0xf0 | code >> 18;\n          bytes[index++] = 0x80 | code >> 12 & 0x3f;\n          bytes[index++] = 0x80 | code >> 6 & 0x3f;\n          bytes[index++] = 0x80 | code & 0x3f;\n        }\n      }\n      key = bytes;\n    } else {\n      if (type === 'object') {\n        if (key === null) {\n          throw new Error(ERROR);\n        } else if (ARRAY_BUFFER && key.constructor === ArrayBuffer) {\n          key = new Uint8Array(key);\n        } else if (!Array.isArray(key)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(key)) {\n            throw new Error(ERROR);\n          }\n        }\n      } else {\n        throw new Error(ERROR);\n      }\n    }\n    if (key.length > 64) {\n      key = new Sha256(is224, true).update(key).array();\n    }\n    var oKeyPad = [],\n      iKeyPad = [];\n    for (i = 0; i < 64; ++i) {\n      var b = key[i] || 0;\n      oKeyPad[i] = 0x5c ^ b;\n      iKeyPad[i] = 0x36 ^ b;\n    }\n    Sha256.call(this, is224, sharedMemory);\n    this.update(iKeyPad);\n    this.oKeyPad = oKeyPad;\n    this.inner = true;\n    this.sharedMemory = sharedMemory;\n  }\n  HmacSha256.prototype = new Sha256();\n  HmacSha256.prototype.finalize = function () {\n    Sha256.prototype.finalize.call(this);\n    if (this.inner) {\n      this.inner = false;\n      var innerHash = this.array();\n      Sha256.call(this, this.is224, this.sharedMemory);\n      this.update(this.oKeyPad);\n      this.update(innerHash);\n      Sha256.prototype.finalize.call(this);\n    }\n  };\n  var exports = createMethod();\n  exports.sha256 = exports;\n  exports.sha224 = createMethod(true);\n  exports.sha256.hmac = createHmacMethod();\n  exports.sha224.hmac = createHmacMethod(true);\n  if (COMMON_JS) {\n    module.exports = exports;\n  } else {\n    root.sha256 = exports.sha256;\n    root.sha224 = exports.sha224;\n    if (AMD) {\n      define(function () {\n        return exports;\n      });\n    }\n  }\n})();","map":{"version":3,"names":["ERROR","WINDOW","window","root","JS_SHA256_NO_WINDOW","WEB_WORKER","self","NODE_JS","JS_SHA256_NO_NODE_JS","process","versions","node","global","COMMON_JS","JS_SHA256_NO_COMMON_JS","module","exports","AMD","define","amd","ARRAY_BUFFER","JS_SHA256_NO_ARRAY_BUFFER","ArrayBuffer","HEX_CHARS","split","EXTRA","SHIFT","K","OUTPUT_TYPES","blocks","Array","isArray","obj","Object","prototype","toString","call","JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW","isView","buffer","constructor","createOutputMethod","outputType","is224","message","Sha256","update","createMethod","method","nodeWrap","create","i","length","type","crypto","eval","Buffer","algorithm","nodeMethod","createHash","digest","undefined","Error","Uint8Array","createHmacOutputMethod","key","HmacSha256","createHmacMethod","sharedMemory","h0","h1","h2","h3","h4","h5","h6","h7","block","start","bytes","hBytes","finalized","hashed","first","notString","code","index","charCodeAt","lastByteIndex","hash","finalize","a","b","c","d","e","f","g","h","j","s0","s1","maj","t1","t2","ch","ab","da","cd","bc","hex","arr","push","array","arrayBuffer","dataView","DataView","setUint32","oKeyPad","iKeyPad","inner","innerHash","sha256","sha224","hmac"],"sources":["D:/Abdo files/TP3_MS/ecom-web-app/node_modules/js-sha256/src/sha256.js"],"sourcesContent":["/**\n * [js-sha256]{@link https://github.com/emn178/js-sha256}\n *\n * @version 0.9.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2014-2017\n * @license MIT\n */\n/*jslint bitwise: true */\n(function () {\n  'use strict';\n\n  var ERROR = 'input is invalid type';\n  var WINDOW = typeof window === 'object';\n  var root = WINDOW ? window : {};\n  if (root.JS_SHA256_NO_WINDOW) {\n    WINDOW = false;\n  }\n  var WEB_WORKER = !WINDOW && typeof self === 'object';\n  var NODE_JS = !root.JS_SHA256_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n  if (NODE_JS) {\n    root = global;\n  } else if (WEB_WORKER) {\n    root = self;\n  }\n  var COMMON_JS = !root.JS_SHA256_NO_COMMON_JS && typeof module === 'object' && module.exports;\n  var AMD = typeof define === 'function' && define.amd;\n  var ARRAY_BUFFER = !root.JS_SHA256_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\n  var HEX_CHARS = '0123456789abcdef'.split('');\n  var EXTRA = [-2147483648, 8388608, 32768, 128];\n  var SHIFT = [24, 16, 8, 0];\n  var K = [\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n  ];\n  var OUTPUT_TYPES = ['hex', 'array', 'digest', 'arrayBuffer'];\n\n  var blocks = [];\n\n  if (root.JS_SHA256_NO_NODE_JS || !Array.isArray) {\n    Array.isArray = function (obj) {\n      return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n  }\n\n  if (ARRAY_BUFFER && (root.JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\n    ArrayBuffer.isView = function (obj) {\n      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n    };\n  }\n\n  var createOutputMethod = function (outputType, is224) {\n    return function (message) {\n      return new Sha256(is224, true).update(message)[outputType]();\n    };\n  };\n\n  var createMethod = function (is224) {\n    var method = createOutputMethod('hex', is224);\n    if (NODE_JS) {\n      method = nodeWrap(method, is224);\n    }\n    method.create = function () {\n      return new Sha256(is224);\n    };\n    method.update = function (message) {\n      return method.create().update(message);\n    };\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createOutputMethod(type, is224);\n    }\n    return method;\n  };\n\n  var nodeWrap = function (method, is224) {\n    var crypto = eval(\"require('crypto')\");\n    var Buffer = eval(\"require('buffer').Buffer\");\n    var algorithm = is224 ? 'sha224' : 'sha256';\n    var nodeMethod = function (message) {\n      if (typeof message === 'string') {\n        return crypto.createHash(algorithm).update(message, 'utf8').digest('hex');\n      } else {\n        if (message === null || message === undefined) {\n          throw new Error(ERROR);\n        } else if (message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        }\n      }\n      if (Array.isArray(message) || ArrayBuffer.isView(message) ||\n        message.constructor === Buffer) {\n        return crypto.createHash(algorithm).update(new Buffer(message)).digest('hex');\n      } else {\n        return method(message);\n      }\n    };\n    return nodeMethod;\n  };\n\n  var createHmacOutputMethod = function (outputType, is224) {\n    return function (key, message) {\n      return new HmacSha256(key, is224, true).update(message)[outputType]();\n    };\n  };\n\n  var createHmacMethod = function (is224) {\n    var method = createHmacOutputMethod('hex', is224);\n    method.create = function (key) {\n      return new HmacSha256(key, is224);\n    };\n    method.update = function (key, message) {\n      return method.create(key).update(message);\n    };\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createHmacOutputMethod(type, is224);\n    }\n    return method;\n  };\n\n  function Sha256(is224, sharedMemory) {\n    if (sharedMemory) {\n      blocks[0] = blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n        blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n        blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n        blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      this.blocks = blocks;\n    } else {\n      this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    }\n\n    if (is224) {\n      this.h0 = 0xc1059ed8;\n      this.h1 = 0x367cd507;\n      this.h2 = 0x3070dd17;\n      this.h3 = 0xf70e5939;\n      this.h4 = 0xffc00b31;\n      this.h5 = 0x68581511;\n      this.h6 = 0x64f98fa7;\n      this.h7 = 0xbefa4fa4;\n    } else { // 256\n      this.h0 = 0x6a09e667;\n      this.h1 = 0xbb67ae85;\n      this.h2 = 0x3c6ef372;\n      this.h3 = 0xa54ff53a;\n      this.h4 = 0x510e527f;\n      this.h5 = 0x9b05688c;\n      this.h6 = 0x1f83d9ab;\n      this.h7 = 0x5be0cd19;\n    }\n\n    this.block = this.start = this.bytes = this.hBytes = 0;\n    this.finalized = this.hashed = false;\n    this.first = true;\n    this.is224 = is224;\n  }\n\n  Sha256.prototype.update = function (message) {\n    if (this.finalized) {\n      return;\n    }\n    var notString, type = typeof message;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (message === null) {\n          throw new Error(ERROR);\n        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        } else if (!Array.isArray(message)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\n            throw new Error(ERROR);\n          }\n        }\n      } else {\n        throw new Error(ERROR);\n      }\n      notString = true;\n    }\n    var code, index = 0, i, length = message.length, blocks = this.blocks;\n\n    while (index < length) {\n      if (this.hashed) {\n        this.hashed = false;\n        blocks[0] = this.block;\n        blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n          blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n          blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n          blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      }\n\n      if (notString) {\n        for (i = this.start; index < length && i < 64; ++index) {\n          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n        }\n      } else {\n        for (i = this.start; index < length && i < 64; ++index) {\n          code = message.charCodeAt(index);\n          if (code < 0x80) {\n            blocks[i >> 2] |= code << SHIFT[i++ & 3];\n          } else if (code < 0x800) {\n            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else if (code < 0xd800 || code >= 0xe000) {\n            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else {\n            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          }\n        }\n      }\n\n      this.lastByteIndex = i;\n      this.bytes += i - this.start;\n      if (i >= 64) {\n        this.block = blocks[16];\n        this.start = i - 64;\n        this.hash();\n        this.hashed = true;\n      } else {\n        this.start = i;\n      }\n    }\n    if (this.bytes > 4294967295) {\n      this.hBytes += this.bytes / 4294967296 << 0;\n      this.bytes = this.bytes % 4294967296;\n    }\n    return this;\n  };\n\n  Sha256.prototype.finalize = function () {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex;\n    blocks[16] = this.block;\n    blocks[i >> 2] |= EXTRA[i & 3];\n    this.block = blocks[16];\n    if (i >= 56) {\n      if (!this.hashed) {\n        this.hash();\n      }\n      blocks[0] = this.block;\n      blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n        blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n        blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n        blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n    }\n    blocks[14] = this.hBytes << 3 | this.bytes >>> 29;\n    blocks[15] = this.bytes << 3;\n    this.hash();\n  };\n\n  Sha256.prototype.hash = function () {\n    var a = this.h0, b = this.h1, c = this.h2, d = this.h3, e = this.h4, f = this.h5, g = this.h6,\n      h = this.h7, blocks = this.blocks, j, s0, s1, maj, t1, t2, ch, ab, da, cd, bc;\n\n    for (j = 16; j < 64; ++j) {\n      // rightrotate\n      t1 = blocks[j - 15];\n      s0 = ((t1 >>> 7) | (t1 << 25)) ^ ((t1 >>> 18) | (t1 << 14)) ^ (t1 >>> 3);\n      t1 = blocks[j - 2];\n      s1 = ((t1 >>> 17) | (t1 << 15)) ^ ((t1 >>> 19) | (t1 << 13)) ^ (t1 >>> 10);\n      blocks[j] = blocks[j - 16] + s0 + blocks[j - 7] + s1 << 0;\n    }\n\n    bc = b & c;\n    for (j = 0; j < 64; j += 4) {\n      if (this.first) {\n        if (this.is224) {\n          ab = 300032;\n          t1 = blocks[0] - 1413257819;\n          h = t1 - 150054599 << 0;\n          d = t1 + 24177077 << 0;\n        } else {\n          ab = 704751109;\n          t1 = blocks[0] - 210244248;\n          h = t1 - 1521486534 << 0;\n          d = t1 + 143694565 << 0;\n        }\n        this.first = false;\n      } else {\n        s0 = ((a >>> 2) | (a << 30)) ^ ((a >>> 13) | (a << 19)) ^ ((a >>> 22) | (a << 10));\n        s1 = ((e >>> 6) | (e << 26)) ^ ((e >>> 11) | (e << 21)) ^ ((e >>> 25) | (e << 7));\n        ab = a & b;\n        maj = ab ^ (a & c) ^ bc;\n        ch = (e & f) ^ (~e & g);\n        t1 = h + s1 + ch + K[j] + blocks[j];\n        t2 = s0 + maj;\n        h = d + t1 << 0;\n        d = t1 + t2 << 0;\n      }\n      s0 = ((d >>> 2) | (d << 30)) ^ ((d >>> 13) | (d << 19)) ^ ((d >>> 22) | (d << 10));\n      s1 = ((h >>> 6) | (h << 26)) ^ ((h >>> 11) | (h << 21)) ^ ((h >>> 25) | (h << 7));\n      da = d & a;\n      maj = da ^ (d & b) ^ ab;\n      ch = (h & e) ^ (~h & f);\n      t1 = g + s1 + ch + K[j + 1] + blocks[j + 1];\n      t2 = s0 + maj;\n      g = c + t1 << 0;\n      c = t1 + t2 << 0;\n      s0 = ((c >>> 2) | (c << 30)) ^ ((c >>> 13) | (c << 19)) ^ ((c >>> 22) | (c << 10));\n      s1 = ((g >>> 6) | (g << 26)) ^ ((g >>> 11) | (g << 21)) ^ ((g >>> 25) | (g << 7));\n      cd = c & d;\n      maj = cd ^ (c & a) ^ da;\n      ch = (g & h) ^ (~g & e);\n      t1 = f + s1 + ch + K[j + 2] + blocks[j + 2];\n      t2 = s0 + maj;\n      f = b + t1 << 0;\n      b = t1 + t2 << 0;\n      s0 = ((b >>> 2) | (b << 30)) ^ ((b >>> 13) | (b << 19)) ^ ((b >>> 22) | (b << 10));\n      s1 = ((f >>> 6) | (f << 26)) ^ ((f >>> 11) | (f << 21)) ^ ((f >>> 25) | (f << 7));\n      bc = b & c;\n      maj = bc ^ (b & d) ^ cd;\n      ch = (f & g) ^ (~f & h);\n      t1 = e + s1 + ch + K[j + 3] + blocks[j + 3];\n      t2 = s0 + maj;\n      e = a + t1 << 0;\n      a = t1 + t2 << 0;\n    }\n\n    this.h0 = this.h0 + a << 0;\n    this.h1 = this.h1 + b << 0;\n    this.h2 = this.h2 + c << 0;\n    this.h3 = this.h3 + d << 0;\n    this.h4 = this.h4 + e << 0;\n    this.h5 = this.h5 + f << 0;\n    this.h6 = this.h6 + g << 0;\n    this.h7 = this.h7 + h << 0;\n  };\n\n  Sha256.prototype.hex = function () {\n    this.finalize();\n\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4, h5 = this.h5,\n      h6 = this.h6, h7 = this.h7;\n\n    var hex = HEX_CHARS[(h0 >> 28) & 0x0F] + HEX_CHARS[(h0 >> 24) & 0x0F] +\n      HEX_CHARS[(h0 >> 20) & 0x0F] + HEX_CHARS[(h0 >> 16) & 0x0F] +\n      HEX_CHARS[(h0 >> 12) & 0x0F] + HEX_CHARS[(h0 >> 8) & 0x0F] +\n      HEX_CHARS[(h0 >> 4) & 0x0F] + HEX_CHARS[h0 & 0x0F] +\n      HEX_CHARS[(h1 >> 28) & 0x0F] + HEX_CHARS[(h1 >> 24) & 0x0F] +\n      HEX_CHARS[(h1 >> 20) & 0x0F] + HEX_CHARS[(h1 >> 16) & 0x0F] +\n      HEX_CHARS[(h1 >> 12) & 0x0F] + HEX_CHARS[(h1 >> 8) & 0x0F] +\n      HEX_CHARS[(h1 >> 4) & 0x0F] + HEX_CHARS[h1 & 0x0F] +\n      HEX_CHARS[(h2 >> 28) & 0x0F] + HEX_CHARS[(h2 >> 24) & 0x0F] +\n      HEX_CHARS[(h2 >> 20) & 0x0F] + HEX_CHARS[(h2 >> 16) & 0x0F] +\n      HEX_CHARS[(h2 >> 12) & 0x0F] + HEX_CHARS[(h2 >> 8) & 0x0F] +\n      HEX_CHARS[(h2 >> 4) & 0x0F] + HEX_CHARS[h2 & 0x0F] +\n      HEX_CHARS[(h3 >> 28) & 0x0F] + HEX_CHARS[(h3 >> 24) & 0x0F] +\n      HEX_CHARS[(h3 >> 20) & 0x0F] + HEX_CHARS[(h3 >> 16) & 0x0F] +\n      HEX_CHARS[(h3 >> 12) & 0x0F] + HEX_CHARS[(h3 >> 8) & 0x0F] +\n      HEX_CHARS[(h3 >> 4) & 0x0F] + HEX_CHARS[h3 & 0x0F] +\n      HEX_CHARS[(h4 >> 28) & 0x0F] + HEX_CHARS[(h4 >> 24) & 0x0F] +\n      HEX_CHARS[(h4 >> 20) & 0x0F] + HEX_CHARS[(h4 >> 16) & 0x0F] +\n      HEX_CHARS[(h4 >> 12) & 0x0F] + HEX_CHARS[(h4 >> 8) & 0x0F] +\n      HEX_CHARS[(h4 >> 4) & 0x0F] + HEX_CHARS[h4 & 0x0F] +\n      HEX_CHARS[(h5 >> 28) & 0x0F] + HEX_CHARS[(h5 >> 24) & 0x0F] +\n      HEX_CHARS[(h5 >> 20) & 0x0F] + HEX_CHARS[(h5 >> 16) & 0x0F] +\n      HEX_CHARS[(h5 >> 12) & 0x0F] + HEX_CHARS[(h5 >> 8) & 0x0F] +\n      HEX_CHARS[(h5 >> 4) & 0x0F] + HEX_CHARS[h5 & 0x0F] +\n      HEX_CHARS[(h6 >> 28) & 0x0F] + HEX_CHARS[(h6 >> 24) & 0x0F] +\n      HEX_CHARS[(h6 >> 20) & 0x0F] + HEX_CHARS[(h6 >> 16) & 0x0F] +\n      HEX_CHARS[(h6 >> 12) & 0x0F] + HEX_CHARS[(h6 >> 8) & 0x0F] +\n      HEX_CHARS[(h6 >> 4) & 0x0F] + HEX_CHARS[h6 & 0x0F];\n    if (!this.is224) {\n      hex += HEX_CHARS[(h7 >> 28) & 0x0F] + HEX_CHARS[(h7 >> 24) & 0x0F] +\n        HEX_CHARS[(h7 >> 20) & 0x0F] + HEX_CHARS[(h7 >> 16) & 0x0F] +\n        HEX_CHARS[(h7 >> 12) & 0x0F] + HEX_CHARS[(h7 >> 8) & 0x0F] +\n        HEX_CHARS[(h7 >> 4) & 0x0F] + HEX_CHARS[h7 & 0x0F];\n    }\n    return hex;\n  };\n\n  Sha256.prototype.toString = Sha256.prototype.hex;\n\n  Sha256.prototype.digest = function () {\n    this.finalize();\n\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4, h5 = this.h5,\n      h6 = this.h6, h7 = this.h7;\n\n    var arr = [\n      (h0 >> 24) & 0xFF, (h0 >> 16) & 0xFF, (h0 >> 8) & 0xFF, h0 & 0xFF,\n      (h1 >> 24) & 0xFF, (h1 >> 16) & 0xFF, (h1 >> 8) & 0xFF, h1 & 0xFF,\n      (h2 >> 24) & 0xFF, (h2 >> 16) & 0xFF, (h2 >> 8) & 0xFF, h2 & 0xFF,\n      (h3 >> 24) & 0xFF, (h3 >> 16) & 0xFF, (h3 >> 8) & 0xFF, h3 & 0xFF,\n      (h4 >> 24) & 0xFF, (h4 >> 16) & 0xFF, (h4 >> 8) & 0xFF, h4 & 0xFF,\n      (h5 >> 24) & 0xFF, (h5 >> 16) & 0xFF, (h5 >> 8) & 0xFF, h5 & 0xFF,\n      (h6 >> 24) & 0xFF, (h6 >> 16) & 0xFF, (h6 >> 8) & 0xFF, h6 & 0xFF\n    ];\n    if (!this.is224) {\n      arr.push((h7 >> 24) & 0xFF, (h7 >> 16) & 0xFF, (h7 >> 8) & 0xFF, h7 & 0xFF);\n    }\n    return arr;\n  };\n\n  Sha256.prototype.array = Sha256.prototype.digest;\n\n  Sha256.prototype.arrayBuffer = function () {\n    this.finalize();\n\n    var buffer = new ArrayBuffer(this.is224 ? 28 : 32);\n    var dataView = new DataView(buffer);\n    dataView.setUint32(0, this.h0);\n    dataView.setUint32(4, this.h1);\n    dataView.setUint32(8, this.h2);\n    dataView.setUint32(12, this.h3);\n    dataView.setUint32(16, this.h4);\n    dataView.setUint32(20, this.h5);\n    dataView.setUint32(24, this.h6);\n    if (!this.is224) {\n      dataView.setUint32(28, this.h7);\n    }\n    return buffer;\n  };\n\n  function HmacSha256(key, is224, sharedMemory) {\n    var i, type = typeof key;\n    if (type === 'string') {\n      var bytes = [], length = key.length, index = 0, code;\n      for (i = 0; i < length; ++i) {\n        code = key.charCodeAt(i);\n        if (code < 0x80) {\n          bytes[index++] = code;\n        } else if (code < 0x800) {\n          bytes[index++] = (0xc0 | (code >> 6));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        } else if (code < 0xd800 || code >= 0xe000) {\n          bytes[index++] = (0xe0 | (code >> 12));\n          bytes[index++] = (0x80 | ((code >> 6) & 0x3f));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        } else {\n          code = 0x10000 + (((code & 0x3ff) << 10) | (key.charCodeAt(++i) & 0x3ff));\n          bytes[index++] = (0xf0 | (code >> 18));\n          bytes[index++] = (0x80 | ((code >> 12) & 0x3f));\n          bytes[index++] = (0x80 | ((code >> 6) & 0x3f));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        }\n      }\n      key = bytes;\n    } else {\n      if (type === 'object') {\n        if (key === null) {\n          throw new Error(ERROR);\n        } else if (ARRAY_BUFFER && key.constructor === ArrayBuffer) {\n          key = new Uint8Array(key);\n        } else if (!Array.isArray(key)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(key)) {\n            throw new Error(ERROR);\n          }\n        }\n      } else {\n        throw new Error(ERROR);\n      }\n    }\n\n    if (key.length > 64) {\n      key = (new Sha256(is224, true)).update(key).array();\n    }\n\n    var oKeyPad = [], iKeyPad = [];\n    for (i = 0; i < 64; ++i) {\n      var b = key[i] || 0;\n      oKeyPad[i] = 0x5c ^ b;\n      iKeyPad[i] = 0x36 ^ b;\n    }\n\n    Sha256.call(this, is224, sharedMemory);\n\n    this.update(iKeyPad);\n    this.oKeyPad = oKeyPad;\n    this.inner = true;\n    this.sharedMemory = sharedMemory;\n  }\n  HmacSha256.prototype = new Sha256();\n\n  HmacSha256.prototype.finalize = function () {\n    Sha256.prototype.finalize.call(this);\n    if (this.inner) {\n      this.inner = false;\n      var innerHash = this.array();\n      Sha256.call(this, this.is224, this.sharedMemory);\n      this.update(this.oKeyPad);\n      this.update(innerHash);\n      Sha256.prototype.finalize.call(this);\n    }\n  };\n\n  var exports = createMethod();\n  exports.sha256 = exports;\n  exports.sha224 = createMethod(true);\n  exports.sha256.hmac = createHmacMethod();\n  exports.sha224.hmac = createHmacMethod(true);\n\n  if (COMMON_JS) {\n    module.exports = exports;\n  } else {\n    root.sha256 = exports.sha256;\n    root.sha224 = exports.sha224;\n    if (AMD) {\n      define(function () {\n        return exports;\n      });\n    }\n  }\n})();\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}